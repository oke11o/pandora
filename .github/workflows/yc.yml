name: Performance tests

on:
  release:
    types: [ created ]
env:
  YC_LT_FOLDER_ID: b1gacohsvc2kc4d76tu5
  YC_LT_AUTHORIZED_KEY_JSON: ${{ secrets.YC_LOADTESTING_CI_AUTHORIZED_KEY_JSON }}
  YC_LT_TEST_AGENT_FILTER: "name = 'agent-pandora-perf-medium'"
  YC_LT_TEST_EXTRA_DESCRIPTION: "GitHub Actions workflow - ${{github.run_id}}"
  YC_LT_SKIP_TEST_CHECK: "1"
  YC_LT_DATA_BUCKET: ${{ secrets.YC_LT_DATA_BUCKET }}
  YC_LT_OUTPUT_DIR: ${{github.workspace}}/performance-test/output

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-yc
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21.x
          cache: true
      - name: Test
        run: go test -race -covermode atomic ./...
      - name: Build
        run: |
          export GOOS=linux
          export CGO_ENABLED=0
          go build -o pandora_perf_2
      - name: Upload
        run: |
          source performance-test/automation/_functions.sh && source performance-test/automation/_variables.sh; yc_s3_upload ./pandora_perf_2 pandora-perf ${YC_LT_DATA_BUCKET}

  test-pandora-perf:
    needs: [ build-and-upload ]
    runs-on: ubuntu-latest
    concurrency: { group: loadtesting }
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-yc
      - name: Run Test HTTP-300inst-sleep0ms
        run: |
          stripped_tag="${{ github.event.release.tag_name }}"
          STRIPPED_TAG=${stripped_tag:1}
          YC_LT_TEST_EXTRA_LABELS="version=${STRIPPED_TAG}" ./performance-test/automation/test.sh ./performance-test/test-config/pandora-perf-http-uri-300inst-sleep0ms
#      - name: Run Test HTTP-2000inst-sleep0ms
#        run: |
#          stripped_tag="${{ github.event.release.tag_name }}"
#          STRIPPED_TAG=${stripped_tag:1}
#          YC_LT_TEST_EXTRA_LABELS="version=${STRIPPED_TAG}" ./performance-test/automation/test.sh ./performance-test/test-config/pandora-perf-http-uri-2000inst-sleep0ms
#      - name: Run Test HTTP-2000inst-sleep50ms
#        run: |
#          stripped_tag="${{ github.event.release.tag_name }}"
#          STRIPPED_TAG=${stripped_tag:1}
#          YC_LT_TEST_EXTRA_LABELS="version=${STRIPPED_TAG}" ./performance-test/automation/test.sh ./performance-test/test-config/pandora-perf-http-uri-2000inst-sleep50ms
#      - name: Run Test GRPC-2000inst-sleep50ms
#        run: |
#          stripped_tag="${{ github.event.release.tag_name }}"
#          STRIPPED_TAG=${stripped_tag:1}
#          YC_LT_TEST_EXTRA_LABELS="version=${STRIPPED_TAG}" ./performance-test/automation/test.sh ./performance-test/test-config/pandora-perf-grpc-2000inst-sleep0ms
#      - name: Run Test GRPC-2000inst-sleep50ms
#        run: |
#          stripped_tag="${{ github.event.release.tag_name }}"
#          STRIPPED_TAG=${stripped_tag:1}
#          YC_LT_TEST_EXTRA_LABELS="version=${STRIPPED_TAG}" ./performance-test/automation/test.sh ./performance-test/test-config/pandora-perf-grpc-2000inst-sleep50ms
#      - name: Run Test GRPC-300inst-sleep0ms
#        run: |
#          stripped_tag="${{ github.event.release.tag_name }}"
#          STRIPPED_TAG=${stripped_tag:1}
#          YC_LT_TEST_EXTRA_LABELS="version=${STRIPPED_TAG}" ./performance-test/automation/test.sh ./performance-test/test-config/pandora-perf-grpc-300inst-sleep0ms
      - name: Upload Artifacts GRPC 300inst-sleep0ms
        uses: actions/upload-artifact@v4
        with:
          name: pandora-perf-grpc-300inst-sleep0ms
          path: ${{ env.YC_LT_OUTPUT_DIR }}
      - name: Parse to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_ID: ${{ github.event.release.id }}
        run: |
          find $YC_LT_OUTPUT_DIR -name 'summary.json' \
            -exec jq -r '"\(.details.name): \(.summary.imbalance_point.rps // "0" | tonumber)"' {} \; > imbalance.txt
          IMBALANCE_PT=$(sed G imbalance.txt)
          
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }} > body.json

          jq --arg report $'\n'"$IMBALANCE_PT" '.body += $report' < body.json > body.json
          cat body.json

          echo '-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-='
          curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }} \
            -d @body.json
          
