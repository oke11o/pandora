name: Test

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

env:
  YC_LT_FOLDER_ID: b1gacohsvc2kc4d76tu5
  YC_LT_AUTHORIZED_KEY_JSON: ${{ secrets.YC_LOADTESTING_CI_AUTHORIZED_KEY_JSON }}
  YC_LT_TEST_AGENT_FILTER: "name = 'agent-pandora-perf-medium'"
  YC_LT_TEST_EXTRA_DESCRIPTION: "GitHub Actions workflow - ${{github.run_id}}"
  YC_LT_SKIP_TEST_CHECK: "1"
  YC_LT_DATA_BUCKET: ${{ secrets.YC_LT_DATA_BUCKET }}
  YC_LT_OUTPUT_DIR: ${{github.workspace}}/performance-test/output

jobs:
  run-unit-tests:
    name: Unit Tests
    concurrency:
      group: unit-${{ github.ref }}-${{ matrix.os }}-${{ matrix.go-version }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
    env:
      OS: ${{ matrix.os }}-latest
      GO: ${{ matrix.go-version }}
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Parse to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_ID: 161082234
        run: |
          set -x
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID > release.json

          cat <<EOF > imbalance.txt
          pandora-perf-grpc-300inst-sleep0ms: 12344
          pandora-perf-grpc-3000inst-sleep0ms: 15555
          EOF
          
          IMBALANCE_PT=$(sed G imbalance.txt)

          jq '{body: .body}' release.json > body.json
          jq --arg report "$IMBALANCE_PT" '.body = .body + "\n" + $report' body.json > _body.json
          
          curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID \
            -d @_body.json

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21.x
          cache: true

      - name: Test
        run: go test -race -coverprofile unit.txt -covermode atomic ./...

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./unit.txt
          flags: unit,${{ matrix.os }},go-${{ matrix.go-version }}
          name: unit

#  build-and-upload:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: ./.github/actions/setup-yc
#      - name: Install Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: 1.21.x
#          cache: true
#      - name: Test
#        run: go test -race -covermode atomic ./...
#      - name: Build
#        run: |
#          export GOOS=linux
#          export CGO_ENABLED=0
#          go build -o pandora_perf_2
#      - name: Upload
#        run: |
#          source performance-test/automation/_functions.sh && source performance-test/automation/_variables.sh; yc_s3_upload ./pandora_perf_2 pandora-perf ${YC_LT_DATA_BUCKET}
#
#  test-pandora-perf:
#    needs: [ build-and-upload ]
#    runs-on: ubuntu-latest
#    concurrency: { group: loadtesting }
#    steps:
#      - uses: actions/checkout@v4
#      - uses: ./.github/actions/setup-yc
#      - name: Run Test HTTP-300inst-sleep0ms
#        run: |
#          stripped_tag="${{ github.event.release.tag_name }}"
#          STRIPPED_TAG=${stripped_tag:1}
#          YC_LT_VERBOSE=2 YC_LT_TEST_EXTRA_LABELS="version=${STRIPPED_TAG}" ./performance-test/automation/test.sh ./performance-test/test-config/pandora-perf-http-uri-300inst-sleep0ms
#      - name: Upload Artifacts GRPC 300inst-sleep0ms
#        uses: actions/upload-artifact@v4
#        with:
#          name: pandora-perf-grpc-300inst-sleep0ms
#          path: ${{ env.YC_LT_OUTPUT_DIR }}
