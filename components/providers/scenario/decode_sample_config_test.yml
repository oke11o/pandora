variables:
  hostname: localhost

variablesources:
  - type: "file/csv"
    name: "users"
    skipheader: true
    headerasfields: false
    file: "files/users.csv"
    fields: [ "user_id", "name", "pass" ]
  - type: "file/json"
    name: "filter_src"
    file: "files/filter.json"

requests:
  - name: "auth_req"
    uri: '/auth'
    method: POST
    headers:
      Useragent: Tank
      Content-Type: "application/json"
    tag: auth
    preprocessor:
      variables:
        user_id: source.users[0].user_id
    body: '{"user_id":  {{.preprocessor.user_id}}}'
    templater: text
    postprocessors:
      - type: var/header
        mapping:
          httpAuthorization: "Http-Authorization"
          Content-Type: "Content-Type|upper"
      - type: 'var/jsonpath'
        mapping:
          token: "$.auth_key"

  - name: list_req
    uri: '/list'
    method: GET
    headers:
      Useragent: "Tank"
      Content-Type: "application/json"
      Authorization: "Bearer {{.request.auth_req.token}}"
    tag: list
    postprocessors:
      - type: var/jsonpath
        mapping:
          items: $.items
          item_id: $.items[0]

  - name: item_req
    preprocessor:
      variables:
        item: request.list_req.items[3]
    uri: '/item'
    tag: item_req
    method: POST
    headers:
      Useragent: "Tank"
      Content-Type: "application/json"
      Authorization: "Bearer {{.request.auth_req.token}}"
    body: '{"item_id": {{.preprocessor.item}}}'

scenarios:
  - name: scenario1
    weight: 50
    minwaitingtime: 500
    shoots: [
      auth_req(1),
      sleep(100),
      list_req(1),
      sleep(100),
      item_req(3)
    ]
  - name: scenario2
    weight: 50
    minwaitingtime: 500
    shoots: [
      auth_req(1),
      sleep(100),
      list_req(1),
      sleep(100),
      item_req(2)
    ]